<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="py.pol.una.ii.pw.mappers.CustomerMapper">

    <select id='findById' parameterType='long' resultType='py.pol.una.ii.pw.model.Customer'>
        SELECT id,name,email,phone_number as phoneNumber,cuenta FROM CUSTOMER
        WHERE id = #{id}
    </select>

    <select id='findByEmail' parameterType='string' resultType='py.pol.una.ii.pw.model.Customer'>
        SELECT id,name,email,phone_number as phoneNumber,cuenta FROM CUSTOMER
        WHERE EMAIL = #{email}
    </select>

    <select id='findAllOrderedByName' resultType='py.pol.una.ii.pw.model.Customer'>
        SELECT id,name,email,phone_number as phoneNumber,cuenta FROM CUSTOMER ORDER BY name
    </select>

    <select id="findByNameAndEmail" resultType="py.pol.una.ii.pw.model.Customer" parameterType="map">
        SELECT id,name,email,phone_number as phoneNumber,cuenta FROM CUSTOMER
        <where>
            <if test="name != null">
                name = #{name}
            </if>
            <if test="email != null">
                AND email = #{email}
            </if>
        </where>
    </select>

    <insert id='insert' parameterType='Customer' useGeneratedKeys="true" keyProperty='id'>
         INSERT INTO CUSTOMER(name, email, phone_number,cuenta)
	    VALUES(#{name}, #{email}, #{phoneNumber},#{cuenta})
    </insert>

    <update id='update' parameterType='Customer'>
        UPDATE CUSTOMER SET
        NAME= #{name},
        EMAIL = #{email},
        PHONE_NUMBER = #{phoneNumber},
        CUENTA = #{cuenta}
        WHERE ID = #{id}
    </update>

    <delete id='delete' parameterType='long'>
        DELETE FROM CUSTOMER WHERE id = #{id}
    </delete>

</mapper>